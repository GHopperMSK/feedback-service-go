version: "3"
services:

  # app:
  #   build: .
  #   container_name: app
  #   restart: "no"
  #   volumes:
  #     - .:/go/src/feedback-service-go
  #   ports:
  #     - 8080:8080
  #   working_dir: /go/src/feedback-service-go
  #   depends_on:
  #     - create-topics
  #     - db
  #   environment:
  #     MYSQL_ROOT_PASSWORD: secret
  #     MYSQL_DATABASE: feedback_service
  #     MYSQL_USER: db_user
  #     MYSQL_PASSWORD: secret
  #   networks:
  #     - feedback_network

  db:
    image: mysql:5.7
    container_name: db
    restart: "no"
    volumes:
      - ./init.sql:/data/application/init.sql
      - ./db_data:/var/lib/mysql
    ports:
      - 3306:3306
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: feedback_service
      MYSQL_USER: db_user
      MYSQL_PASSWORD: secret2
    command: --init-file /data/application/init.sql
    networks:
      - feedback_network

  zookeeper:
    image: bitnami/zookeeper:3.6.1
    container_name: zookeeper
    restart: "no"
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    ports:
      - '9201:2181'
    networks:
      - feedback_network

  kafka:
    image: bitnami/kafka:2.5.0
    container_name: kafka
    restart: "no"
    ports:
      - '29092:29092'
    environment:
      KAFKA_CREATE_TOPICS: "test:1:1"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_LISTENERS: "PLAINTEXT://:9092,PLAINTEXT_HOST://:29092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092"
      ALLOW_ANONYMOUS_LOGIN: "yes"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper
    networks:
      - feedback_network

  create-topics:
    image: confluentinc/cp-kafka:5.5.0
    container_name: create-topics
    restart: "no"
    depends_on:
      - kafka
    command: "
      bash -c 'cub kafka-ready -b kafka:9092 1 120 && \
      kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic test'"
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
    networks:
      - feedback_network

  kafkadrop:
    image: obsidiandynamics/kafdrop
    container_name: kafkadrop
    restart: "no"
    environment:
      KAFKA_BROKERCONNECT: 'kafka:9092'
      JVM_OPTS: '-Xms32M -Xmx64M'
      SERVER_SERVLET_CONTEXTPATH: '/'
    ports:
      - '9203:9000'
    depends_on:
      - kafka
    networks:
      - feedback_network

networks:
  feedback_network:
    driver: bridge

volumes:
  db_data:
